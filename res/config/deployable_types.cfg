# this file contains deployable types and is the early-stage backing for the
# deployable type registry service
_BASE_NODE_DOC = """
<cluster>
 <workspace>
   <name>%(node_name)s</name>
   <image>${epuworker_image_id}</image>
   <quantity>1</quantity>
   <nic wantlogin="true">public</nic>
   <ctx>
     <provides>
       <identity/>
     </provides>
     <requires>
       <identity/>
       <data name="chef-install-work-consumer"><![CDATA[%(spec)s]]></data>
     </requires>
   </ctx>
 </workspace>
</cluster>
""" 

_EPU_WORK_CONSUMER_SPEC = """
{
  "burned_worker":{
    "broker":"${broker_ip_address}",
    "bootscript":"res/scripts/newcc.py",
    "sysname":"${exchange_scope}",
    "broker_heartbeat":"5",
    "lcaarch_branch":"${git_lcaarch_branch}",
    "lcaarch_commit_hash":"${git_lcaarch_commit}",
    "log_level":"WARNING"
  },
  "username":"cc",
  "services":{
    "simple_work_consumer":"{'name':'epu_worker','module':'ion.services.cei.sleeper.epu_worker','class':'EPUWorkerService', 'spawnargs':{'queue_name_work':'cei_work_queue'}}"
  },
  "recipes":["burned_worker"]
}
"""

_EPU_WORK_CONSUMER_DOC = _BASE_NODE_DOC % {'node_name' : 'work_consumer',
        'spec' : _EPU_WORK_CONSUMER_SPEC}

# In lieu of the planned deployable type setup, put specific agent service
# to boot into the services array here.
_EPU_SQLS_WORK_CONSUMER_SPEC = """
{
  "capabilitycontainer":{
    "broker":"${broker_ip_address}",
    "bootscript":"res/scripts/newcc.py",
    "sysname":"${exchange_scope}",
    "broker_heartbeat":"5",
    "pip_package_repo":"http://ooici.net/packages",
    'git_lcaarch_repo':'${git_lcaarch_repo}',
    'git_lcaarch_branch':'${git_lcaarch_branch}', 
    'git_lcaarch_commit':'${git_lcaarch_commit},
    "log_level":"DEBUG"
  },
  "username":"cc",
  "services":{ "sqlstream_app_agent":"{'name':'${some_unique_name}','module':'somewhere.sqlstream_app_agent','class':'AppAgent', 'spawnargs':{'A':'B'}}"
  },
  "recipes":["setuptools", "twisted", "user", "capabilitycontainer"]
}
"""

_SQLS_WORK_CONSUMER_DOC = _BASE_NODE_DOC % {'node_name' : 'work_consumer',
        'spec' : _EPU_SQLS_WORK_CONSUMER_SPEC}

_REGISTRY = {
    'epu_work_consumer' :
    {
        'document' : _EPU_WORK_CONSUMER_DOC,
        'sites' : {
            'ec2-east' : {
                'work_consumer' : {
                    'image' : '${epuworker_image_id}',
                    'sshkeyname' : 'ooi'
                },
            },
            'magellan' : {
                'work_consumer' : {
                    'image' : '${epuworker_image_id}',
                    'sshkeyname' : 'ooi'
                },
            }
        }
    },
    'sqlstream_worker' :
    {
        'document' : _SQLS_WORK_CONSUMER_DOC,
        'sites' : {
            'ec2-west' : {
                'work_consumer' : {
                    'image' : '${epuworker_image_id}',
                    'allocation': 'c1.medium',
                    'sshkeyname' : 'ooi'
                }
            }
        }
    },
    'base-cluster' :
    {
        'document' : 
        '<cluster>'+
        '<workspace><name>head-node</name><image>base-cluster</image>'+
        '<quantity>1</quantity></workspace>'+
        '<workspace><name>worker-node</name><image>base-cluster</image>'+
        '<quantity>3</quantity></workspace>'+
        '</cluster>',
        'sites' : {
            'nimbus-test' : {
                'head-node' : {
                    'image' : 'base-cluster',
                    #'sshkeyname' : 'testkey',
                },
                'worker-node' : {
                    'image' : 'base-cluster',
                    #'sshkeyname' : 'testkey',
                }
            }
        }
    }
}

